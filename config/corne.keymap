/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        Select_All {
            bindings = <&kp LC(A)>;
            key-positions = <1 2 3>;
            timeout-ms = <250>;
        };

        Win_Key_L {
            bindings = <&kp LEFT_WIN>;
            key-positions = <29 37 38>;
            timeout-ms = <50>;
        };

        Refresh {
            bindings = <&kp LS(F5)>;
            key-positions = <26 27 28>;
        };

        Esc_Key {
            bindings = <&kp ESCAPE>;
            key-positions = <14 15>;
            timeout-ms = <50>;
        };

        Print_Screen {
            bindings = <&kp RC(PRINTSCREEN)>;
            key-positions = <6 7>;
            timeout-ms = <250>;
        };

        F17_Key {
            bindings = <&kp F17>;
            key-positions = <17 29>;
            timeout-ms = <350>;
        };

        F19_Key {
            bindings = <&kp F19>;
            key-positions = <17 5>;
            timeout-ms = <350>;
        };

        Delete_Key {
            bindings = <&kp DEL>;
            key-positions = <10 11>;
        };

        Symbols_L {
            bindings = <&mo 2>;
            key-positions = <37 38>;
            slow-release;
            require-prior-idle-ms = <250>;
        };

        Arrow_Layer_L {
            bindings = <&mo 3>;
            key-positions = <36 37>;
            timeout-ms = <50>;
        };

        Enter_Key {
            bindings = <&kp ENTER>;
            key-positions = <15 16>;
            timeout-ms = <200>;
        };

        Arrow_Layer_R {
            bindings = <&mo 3>;
            key-positions = <40 41>;
            timeout-ms = <350>;
        };

        Symbols_R {
            bindings = <&mo 2>;
            key-positions = <39 40>;
            timeout-ms = <350>;
        };

        bluetooth_Layer {
            bindings = <&mo 1>;
            key-positions = <6 7 8 9>;
        };

        Win_Key_R {
            bindings = <&kp LEFT_WIN>;
            key-positions = <30 40 39>;
            timeout-ms = <350>;
        };

        Home_Key_L {
            bindings = <&kp HOME>;
            key-positions = <37 29>;
            timeout-ms = <50>;
        };

        Home_Key_R {
            bindings = <&kp HOME>;
            key-positions = <40 30>;
            timeout-ms = <200>;
        };

        Backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <0 1>;
        };

        Delete {
            bindings = <&kp DELETE>;
            key-positions = <12 13>;
        };

        S_Comma {
            bindings = <&kp COMMA>;
            key-positions = <1 2>;
        };

        S_Period {
            bindings = <&kp PERIOD>;
            key-positions = <2 3>;
        };

        S_Underscore {
            bindings = <&kp UNDERSCORE>;
            key-positions = <3 4>;
        };

        S_Question_Mark {
            bindings = <&kp QMARK>;
            key-positions = <3 16>;
        };

        S_Asterisk {
            bindings = <&kp ASTERISK>;
            key-positions = <4 17>;
        };

        Language {
            bindings = <&kp F18>;
            key-positions = <16 17>;
        };

        Home {
            bindings = <&kp HOME>;
            key-positions = <2 15>;
        };

        End {
            bindings = <&kp END>;
            key-positions = <14 3>;
        };

        Ampersand {
            bindings = <&kp AMPERSAND>;
            key-positions = <15 28>;
        };

        Pipe {
            bindings = <&kp PIPE>;
            key-positions = <16 29>;
        };

        Duble_Quotes {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <14 16>;
        };

        Single_Quote {
            bindings = <&kp SINGLE_QUOTE>;
            key-positions = <15 17>;
        };

        Semicolon {
            bindings = <&kp SEMICOLON>;
            key-positions = <2 4>;
        };

        Test {
            bindings = <&kp EXCL>;
            key-positions = <13 14>;
        };
    };

    behaviors {
        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
            tapping-term-ms = <140>;
            flavor = "balanced";
        };

        prent_Dance: prent_Dance {
            compatible = "zmk,behavior-tap-dance";
            label = "PRENT_DANCE";
            #binding-cells = <0>;
            bindings = <&kp LEFT_PARENTHESIS>, <&kp RIGHT_PARENTHESIS>;

            tapping-term-ms = <180>;
        };

        brace_Dance: brace_Dance {
            compatible = "zmk,behavior-tap-dance";
            label = "BRACE_DANCE";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACE>, <&kp RIGHT_BRACE>;

            tapping-term-ms = <180>;
        };

        bracket_Dance: bracket_Dance {
            compatible = "zmk,behavior-tap-dance";
            label = "BRACKET_DANCE";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET>, <&kp RIGHT_BRACKET>;

            tapping-term-ms = <180>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "Base";
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E           &kp R      &kp T         &kp Y            &kp U              &kp I         &kp O            &kp P                    &kp BSLH
&kp LCTRL  &kp A  &kp S  &kp D           &kp F      &kp G         &kp H            &hmr LEFT_SHIFT J  &hmr LCTRL K  &hmr LEFT_ALT L  &hmr LEFT_WIN SEMICOLON  &kp SQT
&kp LSHFT  &kp Z  &kp X  &mt LEFT_ALT C  &kp V      &mt HOME B    &mt HOME N       &kp M              &kp COMMA     &kp DOT          &kp FSLH                 &mt F1 RET
                         &mo 4           &kp SPACE  &kp F22       &lt 3 BACKSPACE  &lt 2 SPACE        &lt 4 DELETE
            >;
        };

        Bluetooth {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Lower";
            bindings = <
&trans  &trans        &trans        &trans        &trans        &trans          &trans  &trans  &trans      &trans  &trans  &trans
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans  &trans      &trans  &trans  &trans
&trans  &trans        &trans        &trans        &trans        &trans          &trans  &trans  &trans      &trans  &trans  &trans
                                    &trans        &trans        &trans          &trans  &trans  &bt BT_CLR
            >;
        };

        Symbol {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Raise";
            bindings = <
&kp COMMA    &kp PERIOD       &kp EXCLAMATION       &kp EQUAL     &kp PLUS       &kp MINUS         &kp CARET          &kp LESS_THAN  &kp EQUAL             &kp GREATER_THAN  &kp PERIOD       &kp COMMA
&kp PERCENT  &kp EXCLAMATION  &kp EQUAL             &prent_Dance  &brace_Dance   &bracket_Dance    &kp RIGHT_BRACKET  &kp SLASH      &kp NON_US_BACKSLASH  &kp EQUAL         &kp EXCLAMATION  &kp GRAVE
&kp HASH     &kp SLASH        &kp NON_US_BACKSLASH  &kp PIPE      &kp AMPERSAND  &trans            &kp UNDER          &kp PLUS       &kp LBRC              &kp RBRC          &kp PIPE         &kp TILDE
                                                    &trans        &trans         &trans            &trans             &trans         &trans
            >;
        };

        Arrow {
            bindings = <
&trans  &trans  &trans    &kp UP    &trans        &trans    &trans  &trans    &kp UP    &trans     &trans  &trans
&trans  &trans  &kp LEFT  &kp DOWN  &kp RIGHT     &trans    &trans  &kp LEFT  &kp DOWN  &kp RIGHT  &trans  &trans
&trans  &trans  &trans    &trans    &kp LEFT_ALT  &trans    &trans  &kp LALT  &trans    &trans     &trans  &trans
                          &trans    &trans        &trans    &trans  &trans    &trans
            >;
        };

        Number {
            bindings = <
&kp EQUAL  &kp N0  &kp N9  &kp N8    &kp N7     &kp N6    &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&kp MINUS  &kp N1  &kp N2  &kp N3    &kp N4     &kp N5    &kp F1  &kp F2  &kp F3  &kp F4   &kp F5   &kp F6
&trans     &trans  &trans  &kp LALT  &kp LCTRL  &trans    &trans  &trans  &trans  &trans   &trans   &trans
                           &trans    &trans     &trans    &trans  &trans  &trans
            >;
        };
    };
};
